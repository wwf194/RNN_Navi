{
    //"Task": "PredictPlaceCellsActivity",
    //"Task": "PredictXYs",
    "Task": "$^param.task.Task",
    "HiddenNeurons.Num":{
        "PredictXYs": 100,
        "PredictPlaceCellsActivity": 2048
    },
    
    "InitTasks":[
        {
            "FunctionCall": [
                "&*SetModelInputOutput",
                "&*ParseParam",
                //["&*SetFullName", [""]],
            ]
        },
    ],
    "Modules":{
        "PlaceCells":{
            "ModulePath": "Models.PlaceCells2D",
            "__ResolveBase__": true, 
            "Num": "$^param.agent.Modules.model.Neurons.Num // 4",
            "XYs":{
                "Init": {
                    "Method": "FunctionCall",
                    "Args": [
                        [
                            "&^object.world.Arenas[0].GenerateRandomInternalXYs",
                            ["$Num"]
                        ],
                        [
                            "&^object.agent.cache.Modules.PlaceCells.SetXYs",
                            ["__PreviousFunctionOutput__"]
                        ]
                    ]
                }
            },
            "Activity.Max": 1.0,
            "XYs2Activity":{
                "Init":[
                    {
                        "Type":"XYs2dLs"
                    },
                    {
                        "Type": "DiffGaussian",
                        "Amp1": "$Activity.Max",
                        "Mean1": 0.0, 
                        "Std1": "$^param.world.Arenas[0].BoundaryBox.Size * 0.07",
                        "Amp2": "$~Amp1 * 0.5",
                        "Mean2": 0.0,
                        "Std2": "$~Std1 * 2.0"
                    },
                ]
            }
        },
        "model":"$^param.model",
        "model.Input.Type": "dLDirection", //dXY
        "model.InputInit.Type": "__ToBeSet__",
        "model.ModulePath": "Models.RNNLIF",
        "__ResolveBase__": true,
    },
    "Dynamics":{
        "Train":{
            "In":["TrajectoryParam", "TrainParam"],
            "Out":[],
            "Routings": [
                "TrajectoryParam |--> &GenerateRandomTrajectory |--> Trajectory",
                "Trajectory |--> &Trajectory2ModelInput |--> ModelInput",
                "Trajectory |--> &Trajectory2ModelOutput |--> ModelOutputTarget",
                "ModelInput, ModelOutputTarget, TrainParam |--> &model.cache.Dynamics.Train",
            ],
        },
        "Test":{
            "In":["TrajectoryParam", "TrainParam"],
            "Out":[],
            "Routings": [
                "TrajectoryParam |--> &GenerateRandomTrajectory |--> Trajectory",
                "Trajectory |--> &Trajectory2ModelInput |--> ModelInput",
                "Trajectory |--> &Trajectory2ModelOutput |--> ModelOutputTarget",
                "ModelInput, ModelOutputTarget, TrainParam |--> &model.cache.Dynamics.Test",
            ],
        }
    }
}