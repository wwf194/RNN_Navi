{
    "type": "rnn_lif",
    "neurons":{
        "input":{
            "num":"^environment.input.num"
        },
        "recurrent":{
            "ExciInhi":{
                "enable": true,
                "weight": [
                    "&modules.recurrent.weight",
                    "&modules.output.weight"
                ]
            },
            "num": 2048,
            "excitatory":{
                "ratio": 0.8
            },
            "inhibitory":{},
            "nonlinear":"relu"
        },
        "output":{
            "num": "@neurons.recurrent.num // 4"
        },
        "num": "@neurons.recurrent.num"
    },
    "modules":{
        "recurrent":{
            "type":"SingleLayer",
            "subtype":"f(Wx+b)",
            "weight":{
                "size":["@neurons.recurrent.num", "@neurons.recurrent.num"],
                "initialize":{
                    "method": "kaiming",
                    "coefficient": 1.0e-1
                }
            },
            "bias": true,
            "nonlinear":"@neurons.recurrent.nonlinear"
        },
        "output":{
            "type":"SingleLayer",
            "subtype":"Wx+b",
            "weight":{
                "size":["@neurons.recurrent.num", "@neurons.output.num"],
                "initialize":{
                    "method": "kaiming",
                    "coefficient": 1.0e-1
                }
            },
            "bias":true,
            "nonlinear":"@neurons.recurrent.nonlinear"
        },
        "input":{
            "type": "SingleLayer",
            "subtype":"f(Wx+b)",
            "input.num":"@neurons.input.num",
            "output.num":"@neurons.recurrent.num",
            "weight":{
                "initialize":{
                    "method": "kaiming",
                    "coefficient": 1.0e-1
                }
            },
            "bias": true,
            "nonlinear":"@neurons.recurrent.nonlinear"
        },
        "initialize":{
            "type":"MultiLayerPerceptron",
            "output":{"num":"@neurons.recurrent.num"},
            "initialize.method":"FromNeuronNum",
            "neurons":{
                "num":[
                    "^environment.input_initialize.num",
                    "@neurons.recurrent.num // 2",
                    "@neurons.recurrent.num"
                ]
            },
            "layers":{
                "num": "len(@modules.initialize.neurons.num) - 1",
                "nonlinear": "@neurons.recurrent.nonlinear",
                "bias": true,
            }
        }
    },
    "dynamics":{
        "run":{
            "in":["inputInit", "inputSeries", "time"],
            "out":["outputSeries"],
            "time": "&time",
            "internal":[
                "inputSeries |--> inputSender",
                "x0 |--> &initialize |--> stateHidden, stateCell",
                "|--> &iterate |--> || repeat=&time",
                "&outputReceiver |--> outputSeries"
            ]
        },
        "iterate":{
            "in":["inputProcessed", "stateHidden", "stateCell"],
            "out":["stateHidden", "stateCell", "output"],
            "internal":[
                "&inputSender |--> input",
                "input |-->&input |--> inputProcessed",
                "inputProcessed, hiddenState, cellState |--> &recurrent |--> hiddenState, cellState, outputRecurrent",
                "outRecurrent |--> &output |--> output",
                "output |--> &outputReceiver"
            ]
        },
        "outputReceiver":{
            "type":"SerialReceiver"
        },
        "inputSender":{
            "type":"SerialSender"
        },
    }
}